<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.kkbdv.dao.CommentsMapper">
  <resultMap id="BaseResultMap" type="edu.kkbdv.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="fatherCommentId" />
    <result column="to_user_id" jdbcType="VARCHAR" property="toUserId" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>

  <resultMap id="CommentVoMap" type="edu.kkbdv.pojo.vo.CommentsVo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="fatherCommentId" />
    <result column="to_user_id" jdbcType="VARCHAR" property="toUserId" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
    <result column="face_image" property="faceImage"></result>
    <result column="nickname" property="nickname"></result>
    <result column="toNickname" property="toNickname"></result>
  </resultMap>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="edu.kkbdv.pojo.Comments">
    insert into comments (id, father_comment_id, to_user_id, 
      video_id, from_user_id, create_time, 
      `comment`)
    values (#{id,jdbcType=VARCHAR}, #{fatherCommentId,jdbcType=VARCHAR}, #{toUserId,jdbcType=VARCHAR}, 
      #{videoId,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="edu.kkbdv.pojo.Comments">
    update comments
    set father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `comment` = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, father_comment_id, to_user_id, video_id, from_user_id, create_time, `comment`
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, father_comment_id, to_user_id, video_id, from_user_id, create_time, `comment`
    from comments
  </select>
  <select id="queryComments" parameterType="String" resultMap="CommentVoMap">
    select c.* ,u.face_image as face_image ,u.nickname ,tu.nickname as toNickname
    from comments c left join users u on c.from_user_id=u.id LEFT JOIN
		users tu on c.to_user_id = tu.id
    where c.video_id=#{videoId} order by c.create_time desc
  </select>
  <delete id="deleteByVideoId" parameterType="String">
    delete from comments
    where video_id = #{videoId}
  </delete>
</mapper>